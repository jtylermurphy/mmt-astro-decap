---
/* src/components/HeaderNav.astro */
import Icon from "@/components/Icon.astro";
import { icons } from "@/lib/icons";
import type { HeaderNavProps } from "@/lib/data/site";
import SocialLinks from "@/components/SocialLinks.astro";

const props = Astro.props as HeaderNavProps;
const { siteName, logoSrc, logoAlt = siteName, sticky, links, cta, contact, socials } = props;
---

<header class={`bg-white border-b-[3px] border-primary ${sticky ? "sticky top-0 z-40" : ""}`}>
  <!-- Top bar -->
  <div class="bg-secondary text-white hidden md:block">
    <div
      class="mx-auto max-w-7xl px-4 py-2 sm:h-10 flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-0 sm:justify-between">
      <!-- Left: phone/email -->
      <div class="text-sm flex flex-col sm:flex-row items-center gap-2">
        {
          contact?.phone && (
            <a
              class="inline-flex items-center gap-2 hover:!text-primary"
              href={contact.telHref}
              aria-label={`Call ${contact.phone}`}>
              <Icon html={icons.phone} />
              {contact.phone}
            </a>
          )
        }
        {contact?.phone && contact?.email && <span class="hidden sm:inline">â€¢</span>}
        {
          contact?.email && (
            <a
              href={contact.mailHref}
              class="inline-flex items-center gap-2 hover:!text-primary"
              aria-label={`Email ${contact.email}`}>
              <Icon html={icons.envelope} />
              {contact.email}
            </a>
          )
        }
      </div>

      <SocialLinks links={socials} />
    </div>
  </div>

  <!-- Main bar -->
  <div class="mx-auto max-w-7xl px-4 h-16 flex items-center justify-between">
    <a href="/" class="flex items-center gap-2">
      <img src="/images/logo-van-only.png" alt="" class="h-12 w-auto" />
      <span class="text-2xl font-serif font-black italic tracking-wide">{siteName}</span>
    </a>

    <!-- Desktop nav -->
    <nav class="hidden md:flex items-center gap-6" aria-label="Primary">
      {
        links.map((item) => (
          <a href={item.href} class="text-sm text-slate-700 hover:text-slate-950">
            {item.label}
          </a>
        ))
      }
      {
        cta && (
          <a
            href={cta.href}
            class="rounded-lg bg-emerald-600 px-3 py-2 text-sm font-semibold text-white hover:bg-emerald-700">
            {cta.label}
          </a>
        )
      }
    </nav>

    <!-- Mobile button -->
    <button
      id="mobile-menu-btn"
      class="md:hidden p-2 rounded-lg text-slate-700 hover:bg-slate-100"
      aria-controls="mobile-menu"
      aria-expanded="false"
      aria-label="Menu">
      <svg class="h-6 w-6" viewBox="0 0 24 24" fill="none" aria-hidden="true">
        <path d="M4 6h16M4 12h16M4 18h16" stroke="currentColor" stroke-width="2" stroke-linecap="round"></path>
      </svg>
    </button>
  </div>

  <!-- Mobile panel -->
  <nav id="mobile-menu" class="md:hidden border-t hidden" aria-label="Mobile">
    <div class="mx-auto max-w-7xl px-4 py-3 flex flex-col gap-2">
      {
        links.map((item) => (
          <a href={item.href} class="rounded-lg px-3 py-2 text-base text-slate-800 hover:bg-slate-100">
            {item.label}
          </a>
        ))
      }
      {
        cta && (
          <a
            href={cta.href}
            class="mt-2 inline-flex items-center justify-center rounded-lg bg-emerald-600 px-4 py-2 text-base font-semibold text-white hover:bg-emerald-700">
            {cta.label}
          </a>
        )
      }
    </div>
  </nav>
</header>

<script type="module">
  const btn = document.getElementById("mobile-menu-btn");
  const panel = document.getElementById("mobile-menu");
  if (btn && panel) {
    btn.addEventListener("click", () => {
      const nowHidden = panel.classList.toggle("hidden");
      btn.setAttribute("aria-expanded", String(!nowHidden));
    });
    panel.addEventListener("click", (e) => {
      const a = e.target.closest("a");
      if (a) {
        panel.classList.add("hidden");
        btn.setAttribute("aria-expanded", "false");
      }
    });
  }
</script>
