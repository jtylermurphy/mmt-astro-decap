---
// src/components/SocialLinks.astro
import { icons } from "@/lib/icons";

type IconKey = keyof typeof icons;
export type SocialLink = { label: string; url: string; iconKey: IconKey };

interface Props {
  links: SocialLink[];
  variant?: "header" | "footer";
  class?: string;
}

const { links = [], variant = "header", class: cls = "" } = Astro.props as Props;

const filtered = links
  .map((item) => {
    const trimmed = (item.url ?? "").trim();
    const svg = icons[item.iconKey];
    return trimmed && svg ? { ...item, url: trimmed, icon: svg } : null;
  })
  .filter(Boolean) as Array<SocialLink & { icon: string }>;

const baseClass = variant === "footer" ? "flex gap-1 text-sm" : "flex items-center gap-1  ";
---

{
  filtered.length ? (
    <ul class={`${baseClass} ${cls}`.trim()}>
      {filtered.map(({ label, url, icon }) => (
        <li>
          <a
            href={url}
            aria-label={label}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex h-9 w-9 items-center justify-center rounded-full hover:text-primary focus-visible:outline-none focus-visible:ring">
            <span class="sr-only">{label}</span>
            <span class="icon" set:html={icon} />
          </a>
        </li>
      ))}
    </ul>
  ) : (
    <span class="sr-only">No social links configured</span>
  )
}
