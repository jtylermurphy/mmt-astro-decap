---

---

<form id="newsletter-form" action="/.netlify/functions/newsletter" method="POST" class="w-full max-w-md" novalidate>
  <div style="position:absolute; left:-9999px;" aria-hidden="true">
    <label>Company <input type="text" name="company" autocomplete="organization" tabindex="-1" /></label>
  </div>
  <input type="hidden" name="ts" value={Date.now().toString()} />
  <input type="hidden" name="source" value="footer" />

  <div class="">
    <label class="sr-only" for="nl-email">Email</label>
    <input
      id="nl-email"
      type="email"
      name="email"
      required
      autocomplete="email"
      placeholder="Your email"
      class="w-full rounded-xs border border-slate-300 px-4 py-2 bg-primary"
    />
  </div>

  <div class="mt-3">
    <label class="sr-only" for="nl-name">Name</label>
    <input
      id="nl-name"
      type="text"
      name="name"
      autocomplete="name"
      placeholder="Name (optional)"
      class="w-full rounded-xs border border-slate-300 px-4 py-2 bg-primary"
    />
  </div>
  <button type="submit" class="mt-4 btn btn-secondary px-5 py-2 text-white" aria-label="Subscribe to newsletter">
    Subscribe
  </button>

  <p class="mt-3 text-xs text-white">By subscribing, you agree to occasional emails from Mid Mo Tours.</p>

  <p id="newsletter-status" class="mt-3 text-sm"></p>
  <noscript><p class="mt-2 text-xs">JavaScript is required to submit this form.</p></noscript>
</form>

<script>
  // @ts-nocheck
  (function () {
    var el = document.getElementById("newsletter-form");
    if (!(el && el.tagName === "FORM")) return; // not on this page
    var form = /** @type {HTMLFormElement} */ (el);

    var statusEl = document.getElementById("newsletter-status") || null;
    if (statusEl && !statusEl.getAttribute("role")) {
      statusEl.setAttribute("role", "status");
      statusEl.setAttribute("aria-live", "polite");
    }

    var submitBtn = form.querySelector('button[type="submit"]');
    var tsEl = form.querySelector('input[name="ts"]');
    if (tsEl && tsEl.tagName === "INPUT") tsEl.value = String(Date.now());

    var url = form.getAttribute("action") || "/.netlify/functions/newsletter";
    var emailRe = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

    function setBusy(isBusy) {
      if (submitBtn) {
        submitBtn.disabled = !!isBusy;
        submitBtn.setAttribute("aria-busy", isBusy ? "true" : "false");
      }
      form.setAttribute("data-busy", isBusy ? "true" : "false");
    }

    function setStatus(msg, isError) {
      if (!statusEl) return;
      statusEl.textContent = msg || "";
      statusEl.setAttribute("data-error", isError ? "true" : "false");
      if (isError) {
        statusEl.tabIndex = -1;
        statusEl.focus();
      }
    }

    function sanitizeName(s) {
      s = String(s || "")
        .trim()
        .slice(0, 80);
      return s.replace(/[<>]/g, "").replace(/\s+/g, " ");
    }

    function withTimeout(ms, run) {
      var ctrl = new AbortController();
      var t = setTimeout(function () {
        ctrl.abort();
      }, ms);
      return run(ctrl).finally(function () {
        clearTimeout(t);
      });
    }

    form.addEventListener("submit", function (e) {
      e.preventDefault();

      if (typeof navigator !== "undefined" && "onLine" in navigator && navigator.onLine === false) {
        setStatus("You appear to be offline. Please try again once you’re connected.", true);
        return;
      }

      var fd = new FormData(form);
      var email = (fd.get("email") || "").toString().trim();
      var name = sanitizeName((fd.get("name") || "").toString());

      if (!emailRe.test(email) || email.length > 254) {
        setStatus("Please enter a valid email.", true);
        return;
      }

      setBusy(true);
      setStatus("Submitting…", false);

      // ensure sanitized name is sent
      fd.set("name", name);

      var params = new URLSearchParams();
      fd.forEach(function (v, k) {
        params.append(k, typeof v === "string" ? v : "");
      });

      withTimeout(10000, function (ctrl) {
        return fetch(url, {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8" },
          body: params.toString(),
          signal: ctrl.signal,
        });
      })
        .then(function (res) {
          return res.json().catch(function () {
            return { ok: res.ok, message: res.ok ? "Thanks for subscribing!" : "" };
          });
        })
        .then(function (data) {
          if (data && data.ok) {
            setStatus(data.message || "Thanks for subscribing!", false);
            form.reset();

            var ts2 = form.querySelector('input[name="ts"]');
            if (ts2 && ts2.tagName === "INPUT") ts2.value = String(Date.now());
          } else {
            setStatus((data && data.error) || "Something went wrong. Please try again.", true);
          }
        })
        .catch(function (err) {
          var aborted =
            err &&
            (err.name === "AbortError" ||
              String(err.message || "")
                .toLowerCase()
                .includes("abort"));
          setStatus(aborted ? "Request timed out. Please try again." : "Network error. Please try again.", true);
        })
        .finally(function () {
          setBusy(false);
        });
    });
  })();
</script>
