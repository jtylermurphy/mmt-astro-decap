---
/* src/pages/contact/index.astro — Option B: page fetches settings just for this page */
import Base from "../../layouts/Base.astro";
import ContactInfo from "../../components/ContactInfo.astro";
import { getSiteSettings } from "../../lib/siteSettings";
import { deriveSettings } from "../../lib/settingsUtils";

// Fetch site settings for this page so ContactInfo can render phone/email/etc.
const raw = await getSiteSettings();
const settings = deriveSettings(raw);

// Optional: Google Forms URL (static fallback)
const gformUrl = "https://forms.gle/8Nr6gr5Eq6LV7UhT8";
const error = Astro.url.searchParams.get("error");
---

<Base
  title="Contact | Mid MO Tours"
  description="Get in touch to book a tour, plan a custom itinerary, or ask a question.">
  <section class="">
    <div class="mx-auto max-w-7xl px-4 py-12 grid gap-10 lg:grid-cols-3">
      <!-- Contact info (matches footer/header styling) -->
      <aside class="lg:col-span-1">
        <h1 class="text-3xl font-semibold tracking-tight">Contact Us</h1>
        <p class="mt-3 text-slate-600">We'll get back to you as soon as we can.</p>

        <div class="mt-6">
          <ContactInfo settings={settings} />
        </div>
      </aside>

      <!-- Form: handled via API + Resend -->
      <div id="custom-tour" class="lg:col-span-2">
        {
          error && (
            <div class="mb-6 rounded-xl border border-red-200 bg-red-50 p-4 text-sm text-red-700">
              {error === "missing"
                ? "Please fill out the required fields before submitting."
                : "We couldn’t send your message right now. Please try again or call us."}
            </div>
          )
        }
        <form
          name="contact"
          method="POST"
          action="/.netlify/functions/contact"
          class="rounded-2xl border p-6 shadow-sm bg-white">
          <input type="text" name="company" autocomplete="organization" tabindex="-1" class="sr-only" aria-hidden="true" />
          <input type="hidden" name="honeypot" value="" />
          <input type="hidden" name="ts" value="" data-timestamp />
          <!-- Attribution & context (filled by JS) -->
          <input type="hidden" name="page_url" />
          <input type="hidden" name="page_title" />
          <input type="hidden" name="referrer" />
          <input type="hidden" name="utm_source" />
          <input type="hidden" name="utm_medium" />
          <input type="hidden" name="utm_campaign" />
          <input type="hidden" name="utm_term" />
          <input type="hidden" name="utm_content" />
          <input type="hidden" name="timestamp" />

          <div class="grid gap-4 sm:grid-cols-2">
            <div class="sm:col-span-1">
              <label class="block text-sm font-medium text-slate-900" for="name">Full name</label>
              <input
                id="name"
                name="name"
                type="text"
                required
                autocomplete="name"
                class="mt-1 block w-full rounded-lg border px-3 py-2 text-slate-900 placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-accent"
              />
            </div>

            <div class="sm:col-span-1">
              <label class="block text-sm font-medium text-slate-900" for="email">Email</label>
              <input
                id="email"
                name="email"
                type="email"
                required
                autocomplete="email"
                inputmode="email"
                class="mt-1 block w-full rounded-lg border px-3 py-2 text-slate-900 placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-accent"
              />
            </div>

            <div class="sm:col-span-1">
              <label class="block text-sm font-medium text-slate-900" for="phone">Phone (optional)</label>
              <input
                id="phone"
                name="phone"
                type="tel"
                autocomplete="tel"
                inputmode="tel"
                class="mt-1 block w-full rounded-lg border px-3 py-2 text-slate-900 placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-accent"
              />
            </div>

            <div class="sm:col-span-1">
              <label class="block text-sm font-medium text-slate-900" for="topic">Topic</label>
              <select
                id="topic"
                name="topic"
                class="mt-1 block w-full rounded-lg border px-3 py-2 text-slate-900 focus:outline-none focus:ring-2 focus:ring-accent">
                <option value="booking">Booking the Standard Tour</option>
                <option value="custom">Requesting a Custom Tour</option>
                <option value="package">Packages</option>
                <option value="other">Something else</option>
              </select>
            </div>

            <div class="sm:col-span-2">
              <label class="block text-sm font-medium text-slate-900" for="message">Message</label>
              <textarea
                id="message"
                name="message"
                required
                rows={6}
                class="mt-1 block w-full rounded-lg border px-3 py-2 text-slate-900 placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-accent"
                placeholder="Tell us your dates, group size, and interests."></textarea>
            </div>

            {
              /*
            Optional: Netlify reCAPTCHA (enable in dashboard, then uncomment)
            <div class="sm:col-span-2">
              <div data-netlify-recaptcha="true"></div>
            </div>
            */
            }
          </div>

          <div class="mt-5 flex items-center justify-between">
            <p class="text-sm text-slate-600">
              By submitting, you agree to our
              <a class="text-accent hover:underline" href="/privacy">Privacy Policy</a>.
            </p>
            <button type="submit" class="btn btn-primary">Send Message</button>
          </div>
        </form>

        <!-- Optional: Google Forms embed (toggle to true to use) -->
        {
          false && (
            <div class="mt-8 rounded-2xl border p-6 shadow-sm bg-slate-50">
              <div class="overflow-hidden rounded-xl">
                <iframe
                  src={gformUrl}
                  class="w-full h-[980px] md:h-[1100px] border-0"
                  loading="lazy"
                  title="Mid MO Tours — Contact Form"
                />
              </div>
            </div>
          )
        }

        <!-- Lightweight client script: preselect topic + fill hidden fields -->
        <script is:inline>
          (function () {
            const form = document.forms["contact"];
            if (!form) return;

            const readyTs = () => {
              const field = form.querySelector("input[data-timestamp]");
              if (field) field.value = String(Date.now());
            };

            readyTs();

            form.addEventListener("submit", () => {
              const field = form.querySelector("input[data-timestamp]");
              if (field) {
                const now = Date.now();
                const started = Number(field.value || now);
                field.value = String(now - started);
              }
            });

            const params = new URLSearchParams(location.search);
            const get = (k) => (params.get(k) || "").trim();

            // Preselect Topic
            const topicEl = form.querySelector("#topic");
            const qTopic = (get("topic") || "").toLowerCase();
            const hints = ["booking", "custom", "package", "other"];
            const ref = document.referrer || "";
            const fromPackages = /\/packages?(\b|\/)/i.test(ref) || /(^|&)from=packages(&|$)/i.test(location.search);
            const desired = hints.includes(qTopic) ? qTopic : fromPackages ? "package" : null;
            if (topicEl && desired) topicEl.value = desired;

            // Seed message for package interest
            if (desired === "package") {
              const msg = form.querySelector("#message");
              if (msg && !msg.value) {
                msg.value = "Interested in a package. Dates, group size, and any special stops:";
              }
            }

            // Attribution / context
            const setVal = (name, val) => {
              const el = form.querySelector(`input[name="${name}"]`);
              if (el) el.value = val || "";
            };
            setVal("page_url", location.href);
            setVal("page_title", document.title);
            setVal("referrer", document.referrer);
            ["utm_source", "utm_medium", "utm_campaign", "utm_term", "utm_content"].forEach((k) => setVal(k, get(k)));
            setVal("timestamp", new Date().toISOString());
          })();
        </script>
      </div>
    </div>
  </section>
</Base>
